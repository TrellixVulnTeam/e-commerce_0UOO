{"version":3,"sources":["../../lib/builderUtil.ts"],"names":["AuthSdkError","assertValidConfig","args","issuer","isUrlRegex","RegExp","test","indexOf","userAgent","userAgentTemplateWithNoPlaceholder","template","getUserAgent","sdkValue","value","replace"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,YAAP,MAAyB,uBAAzB;;AAGA;AACA;AACA,SAASC,iBAAT,CAA2BC,IAA3B,EAAkD;AAChDA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;;AACA,MAAI,CAACA,MAAL,EAAa;AACX,UAAM,IAAIH,YAAJ,CAAiB,sCACrB,8FADI,CAAN;AAED;;AAED,MAAII,UAAU,GAAG,IAAIC,MAAJ,CAAW,eAAX,CAAjB;;AACA,MAAI,CAACD,UAAU,CAACE,IAAX,CAAgBJ,IAAI,CAACC,MAArB,CAAL,EAAmC;AACjC,UAAM,IAAIH,YAAJ,CAAiB,iCACrB,8FADI,CAAN;AAED;;AAED,MAAIG,MAAM,CAACI,OAAP,CAAe,SAAf,MAA8B,CAAC,CAAnC,EAAsC;AACpC,UAAM,IAAIP,YAAJ,CAAiB,sEACrB,uEADI,CAAN;AAED;;AAED,MAAIQ,SAAS,GAAGN,IAAI,CAACM,SAArB;AACA,MAAIC,kCAAkC,GACpCD,SAAS,IAAIA,SAAS,CAACE,QAAvB,IAAmCF,SAAS,CAACE,QAAV,CAAmBH,OAAnB,CAA2B,eAA3B,MAAgD,CAAC,CADtF;;AAEA,MAAIE,kCAAJ,EAAwC;AACtC,UAAM,IAAIT,YAAJ,CAAiB,iEACrB,4EADI,CAAN;AAED;AACF;;AAED,SAASW,YAAT,CAAsBT,IAAtB,EAA6CU,QAA7C,EAAuE;AACrE,MAAIJ,SAAS,GAAGN,IAAI,CAACM,SAAL,IAAkB,EAAlC;;AAEA,MAAIA,SAAS,CAACK,KAAd,EAAqB;AACnB,WAAOL,SAAS,CAACK,KAAjB;AACD;;AAED,MAAIL,SAAS,CAACE,QAAd,EAAwB;AACtB,WAAOF,SAAS,CAACE,QAAV,CAAmBI,OAAnB,CAA2B,eAA3B,EAA4CF,QAA5C,CAAP;AACD;;AAED,SAAOA,QAAP;AACD;;AAED,SACEX,iBADF,EAEEU,YAFF","sourcesContent":["/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { OktaAuthOptions } from './types';\n\n// TODO: use @okta/configuration-validation (move module to this monorepo?)\n// eslint-disable-next-line complexity\nfunction assertValidConfig(args: OktaAuthOptions) {\n  args = args || {};\n\n  var issuer = args.issuer;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(args.issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n\n  var userAgent = args.userAgent;\n  var userAgentTemplateWithNoPlaceholder = \n    userAgent && userAgent.template && userAgent.template.indexOf('$OKTA_AUTH_JS') === -1;\n  if (userAgentTemplateWithNoPlaceholder) {\n    throw new AuthSdkError('UserAgentTemplate must include \"$OKTA_AUTH_JS\" placeholder. ' + \n      'Required usage: new OktaAuth({userAgentTemplate: \"xxx $OKTA_AUTH_JS xxx\"})');\n  }\n}\n\nfunction getUserAgent(args: OktaAuthOptions, sdkValue: string): string {\n  var userAgent = args.userAgent || {};\n\n  if (userAgent.value) {\n    return userAgent.value;\n  }\n\n  if (userAgent.template) {\n    return userAgent.template.replace('$OKTA_AUTH_JS', sdkValue);\n  }\n\n  return sdkValue;\n}\n\nexport {\n  assertValidConfig,\n  getUserAgent\n};\n"],"file":"builderUtil.js"}